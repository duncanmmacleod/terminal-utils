#!/usr/bin/env python

"""Clone a fork of a repository on github.com
"""

import argparse
import getpass
import os

if getpass.getuser() in ['duncan', 'duncan.macleod']:
    DEFAULT_USER='duncanmmacleod'
else:
    DEFAULT_USER=None


def shell(cmd):
    print("$ %s" % cmd)
    exitcode = os.system(cmd)
    if exitcode:
        raise RuntimeError("%r failed" % cmd)


parser = argparse.ArgumentParser(
    description=__doc__,
    formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('upstream', metavar='org/repo',
                    help='URI of repo on github.com, e.g. gwpy/gwpy')
parser.add_argument('target', help='target directory for clone',
                    metavar='DIR')
parser.add_argument('-u', '--user', help='username of fork owner',
                    default=DEFAULT_USER, required=DEFAULT_USER is None)
parser.add_argument('-s', '--git-server', default='https://github.com',
                    help='URL of git server')
parser.add_argument('--update', action='store_true', default=False,
                    help='update the fork from upstream')

args = parser.parse_args()

try:
    org, repo = args.upstream.split('/', 1)
except ValueError:
    org = repo = args.upstream

upstream = '%s/%s/%s.git' % (args.git_server, org, repo)
fork = '%s/%s/%s.git' % (args.git_server, args.user, repo)

# clone the repo
os.system('git clone %s %s' % (fork, args.target))

# enter the clone
os.chdir(args.target)
# link the original to the fork as 'upstream'
os.system('git remote add upstream %s' % upstream)
# update the fork from upstream
if args.update:
    os.system('git pull --rebase upstream master')
    os.system('git push')
print("Fork is ready in %s" % args.target)
